#pragma once
#include "Sandbox.h"
#include "gbc/gbc.h"

#define NORMAL_SPEED 4.2
#define DOUBLE_SPEED 8.4

namespace GBC
{
  void Emulate_Cycle(uint8_t n, bool normal);
  void Validate_Opcode(Spec *spec);

  static inline const uint8_t opcycle[256] =
    {
      4,
      12,
      8,
      8,
      4,
      4,
      8,
      4,
      20,
      8,
      8,
      8,
      4,
      4,
      8,
      4,
      4,
      12,
      8,
      8,
      4,
      4,
      8,
      4,
      12,
      8,
      8,
      8,
      4,
      4,
      8,
      4,
      12,
      12,
      8,
      8,
      4,
      4,
      8,
      4,
      12,
      8,
      8,
      8,
      4,
      4,
      8,
      4,
      12,
      12,
      8,
      8,
      12,
      12,
      12,
      4,
      12,
      8,
      8,
      8,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      8,
      8,
      8,
      8,
      8,
      8,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      8,
      4,
      20,
      12,
      16,
      16,
      24,
      16,
      8,
      16,
      20,
      16,
      16,
      4,
      24,
      24,
      8,
      16,
      20,
      12,
      16,
      4,
      24,
      16,
      8,
      16,
      20,
      16,
      16,
      4,
      24,
      4,
      8,
      16,
      12,
      12,
      8,
      4,
      4,
      16,
      8,
      16,
      16,
      4,
      16,
      4,
      4,
      4,
      8,
      16,
      12,
      12,
      8,
      4,
      4,
      16,
      8,
      16,
      12,
      8,
      16,
      4,
      4,
      4,
      8,
      16
    }; 
};
